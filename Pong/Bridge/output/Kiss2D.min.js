Bridge.assembly("Kiss2D",function($asm){"use strict";Bridge.define("Kiss2D.Canvas",{statics:{graphics:null,orientation:0,created:!1,canvasElement:null,context:null,loop:null,paused:!1,config:{init:function(){this.graphics=new(System.Collections.Generic.Dictionary$2(String,HTMLImageElement));this.canvasElement=document.createElement("canvas")}},getWidth:function(){return Kiss2D.Canvas.canvasElement.width},setWidth:function(value){Kiss2D.Canvas.canvasElement.width=value},getHeight:function(){return Kiss2D.Canvas.canvasElement.height},setHeight:function(value){Kiss2D.Canvas.canvasElement.height=value},getPosition:function(){return Kiss2D.Canvas.canvasElement.style.position},setPosition:function(value){Kiss2D.Canvas.canvasElement.style.position=value},getLeft:function(){return Kiss2D.Canvas.canvasElement.style.left},setLeft:function(value){Kiss2D.Canvas.canvasElement.style.left=value},getTop:function(){return Kiss2D.Canvas.canvasElement.style.top},setTop:function(value){Kiss2D.Canvas.canvasElement.style.top=value},getBackgroundColor:function(){return Kiss2D.Canvas.canvasElement.style.backgroundColor},setBackgroundColor:function(value){Kiss2D.Canvas.canvasElement.style.backgroundColor=value},getFillStyle:function(){return Kiss2D.Canvas.context.fillStyle.toString()},setFillStyle:function(value){Kiss2D.Canvas.context.fillStyle=value},getLineWidth:function(){return Kiss2D.Canvas.context.lineWidth},setLineWidth:function(value){Kiss2D.Canvas.context.lineWidth=value},clearRect:function(Left,Top,Right,Bottom){Kiss2D.Canvas.context.clearRect(Left,Top,Right,Bottom)},fillRect:function(Left,Top,Right,Bottom){Kiss2D.Canvas.context.fillRect(Left,Top,Right,Bottom)},drawGraphic:function(Path,sx,sy,swidth,sheight,dx,dy,dwidth,dheight){dx===void 0&&(dx=-1);dy===void 0&&(dy=-1);dwidth===void 0&&(dwidth=-1);dheight===void 0&&(dheight=-1);var img=Kiss2D.Canvas.graphics.get(Path);dx===-1||dy===-1||dwidth===-1||dheight===-1?Kiss2D.Canvas.context.drawImage(img,sx,sy,swidth,sheight):Kiss2D.Canvas.context.drawImage(img,sx,sy,swidth,sheight,dx,dy,dwidth,dheight)},moveTo:function(x,y){Kiss2D.Canvas.context.moveTo(x,y)},lineTo:function(x,y){Kiss2D.Canvas.context.lineTo(x,y)},rect:function(Left,Top,RIght,Bottom){Kiss2D.Canvas.context.rect(Left,Top,RIght,Bottom)},ellipse:function(x,y,radiusX,radiusY,rotation,startAngle,endAngle,counterClockwise){counterClockwise===void 0&&(counterClockwise=!1);Kiss2D.Canvas.context.ellipse(x,y,radiusX,radiusY,rotation,startAngle,endAngle,counterClockwise)},create:function(UseDefaults){if(UseDefaults===void 0&&(UseDefaults=!1),!Kiss2D.Canvas.created){if(UseDefaults&&(Kiss2D.Canvas.setPosition("absolute"),Kiss2D.Canvas.setLeft("0px"),Kiss2D.Canvas.setTop("0px"),Kiss2D.Canvas.setWidth(window.innerWidth),Kiss2D.Canvas.setHeight(window.innerHeight),Kiss2D.Canvas.setBackgroundColor("black")),window.addEventListener("resize",$asm.$.Kiss2D.Canvas.f1),document.body.appendChild(Kiss2D.Canvas.canvasElement),Kiss2D.Canvas.context=Kiss2D.Canvas.canvasElement.getContext("2d"),Bridge.equals(Kiss2D.Canvas.context,null))throw new Kiss2D.KissException("CanvasElementError: HTML5 CanvasElement not supported.");Kiss2D.Canvas.created=!0}},addEvent:function(EventName,Callback){window.addEventListener(EventName,Callback)},startAnimationLoop:function(callback){Kiss2D.Canvas.loop=callback;Kiss2D.Canvas.step()},pause:function(){Kiss2D.Canvas.paused=!Kiss2D.Canvas.paused;Kiss2D.Canvas.paused||window.requestAnimationFrame(Kiss2D.Canvas.step)},loadGraphic:function(source){var img=new Image;img.style.visibility="hidden";img.src=source;document.body.appendChild(img);Kiss2D.Canvas.graphics.add(source,img)},step:function(){Kiss2D.Canvas.paused||(Kiss2D.Canvas.context.clearRect(0,0,Kiss2D.Canvas.getWidth(),Kiss2D.Canvas.getHeight()),Kiss2D.Canvas.loop(),window.requestAnimationFrame(Kiss2D.Canvas.step))}}});Bridge.ns("Kiss2D.Canvas",$asm.$);Bridge.apply($asm.$.Kiss2D.Canvas,{f1:function(){Kiss2D.Canvas.orientation===Kiss2D.Orientation.PORTRAIT&&window.innerWidth>window.innerHeight;Kiss2D.Canvas.orientation===Kiss2D.Orientation.LANDSCAPE&&window.innerWidth>window.innerHeight}});Bridge.define("Kiss2D.Game",{statics:{paused:!1,graphicsObjects:null,soundObjects:null,config:{init:function(){this.graphicsObjects=new(System.Collections.Generic.List$1(Kiss2D.IDrawable));this.soundObjects=new(System.Collections.Generic.List$1(Howl))}},pause:function(){Kiss2D.Game.paused=!Kiss2D.Game.paused}}});Bridge.define("Kiss2D.IPausable",{$kind:"interface"});Bridge.define("Kiss2D.IDrawable",{$kind:"interface"});Bridge.define("Kiss2D.KissException",{inherits:[System.Exception],ctor:function(sMessage){this.$initialize();System.Exception.ctor.call(this);console.log(sMessage)}});Bridge.define("Kiss2D.Orientation",{$kind:"enum",statics:{NONE:0,PORTRAIT:1,LANDSCAPE:2}});Bridge.define("Kiss2D.GameObject",{inherits:[Kiss2D.IDrawable,Kiss2D.IPausable],config:{properties:{X:0,Y:0,Width:0,Height:0,Speed:0},alias:["draw","Kiss2D$IDrawable$draw","pause","Kiss2D$IPausable$pause"]},collision:function(other){return this.getX()<=(other.getX()+other.getWidth()|0)&&(this.getX()+this.getWidth()|0)>=other.getX()&&this.getY()<=(other.getY()+other.getHeight()|0)&&(this.getHeight()+this.getY()|0)>=other.getY()},draw:function(){},pause:function(){}})});